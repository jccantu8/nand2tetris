// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0]=address[0], sel[1]=address[1], sel[2]=address[2], a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8);
    Register(in=in, load=l1, out=r);
    Register(in=in, load=l2, out=s);
    Register(in=in, load=l3, out=t);
    Register(in=in, load=l4, out=u);
    Register(in=in, load=l5, out=v);
    Register(in=in, load=l6, out=w);
    Register(in=in, load=l7, out=x);
    Register(in=in, load=l8, out=y);
    Mux8Way16(a=r, b=s, c=t, d=u, e=v, f=w, g=x, h=y, sel[0]=address[0], sel[1]=address[1], sel[2]=address[2], out=out);
}